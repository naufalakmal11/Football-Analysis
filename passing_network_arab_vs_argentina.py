# -*- coding: utf-8 -*-
"""Passing Network Arab vs Argentina

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11ZPKR-RjTYSJv-VKx-oFQ0vull148EeJ
"""

pip install -U mplsoccer

import matplotlib.pyplot as plt
import pandas as pd
from mplsoccer import Pitch, VerticalPitch

df = pd.read_csv('/content/drive/MyDrive/World Cup Project/events.csv')
df

df = df[df['Event'] == 'Pass']

df

df.info()

average_location = df.groupby('Passer').agg({'X' : ['mean'], 'Y' : ['mean', 'count']})
average_location.columns = ['X', 'Y', 'count']

average_location

pass_between = df.groupby(['Passer','Recipient'])['Event ID'].count().reset_index()
pass_between.rename({'Event ID' : 'Pass_Count'}, axis = 'columns', inplace=True)

pass_between = pass_between.merge(average_location, left_on='Passer', right_index = True)
pass_between = pass_between.merge(average_location, left_on='Recipient', right_index = True, suffixes = ['','_end'])

pass_between

average_location.info()

MAX_LINE_WIDTH = 18
MAX_MARKER_SIZE = 3000
pass_between['width'] = (pass_between.Pass_Count / pass_between.Pass_Count.max() *
                           MAX_LINE_WIDTH)
average_location['marker_size'] = (average_location['count']
                                         / average_location['count'].max() * MAX_MARKER_SIZE)

import numpy as np
from matplotlib.colors import to_rgba
MIN_TRANSPARENCY = 0.3
color = np.array(to_rgba('white'))
color = np.tile(color, (len(pass_between), 1))
c_transparency = pass_between.Pass_Count / pass_between.Pass_Count.max()
c_transparency = (c_transparency * (1 - MIN_TRANSPARENCY)) + MIN_TRANSPARENCY
color[:, 3] = c_transparency

# Setup the pitch
pitch = Pitch(pitch_type='statsbomb', pitch_color='#22312b', line_color='#c7d5cc')
fig, ax = pitch.draw(figsize=(14, 9), constrained_layout=True, tight_layout=False)
fig.set_facecolor("#22312b")
pass_lines = pitch.lines(1.2*pass_between.X, .8*pass_between.Y,
                         1.2*pass_between.X_end, .8*pass_between.Y_end, lw=pass_between.width,
                         color=color, zorder=1, ax=ax)
pass_nodes = pitch.scatter(1.2*average_location.X, .8*average_location.Y,
                           s=average_location.marker_size,
                           color='white', edgecolors='black', linewidth=1, alpha=1, ax=ax)
for index, row in average_location.iterrows():
    pitch.annotate(row.name, xy=(1.2*row.X, .8*row.Y), c='black', va='center',
                   ha='center', size=16, weight='bold', ax=ax)
    
# Load a custom font.
from mplsoccer import Pitch, FontManager, Sbopen
URL = 'https://raw.githubusercontent.com/google/fonts/main/apache/roboto/Roboto%5Bwdth,wght%5D.ttf'
robotto_regular = FontManager(URL)
    

TITLE_TEXT = f'Saudi Arabia, First Half'

df1 = pd.read_csv('/content/drive/MyDrive/World Cup Project/events (1).csv')
df1

df1 = df1[df1['Event'] == 'Pass']
df1

average_location = df1.groupby('Passer').agg({'X' : ['mean'], 'Y' : ['mean', 'count']})
average_location.columns = ['X', 'Y', 'count']

average_location.sort_values(by='count', ascending=False)

average_location = average_location[average_location['count']>4]
average_location

pass_between = df1.groupby(['Passer','Recipient'])['Event ID'].count().reset_index()
pass_between.rename({'Event ID' : 'Pass_Count'}, axis = 'columns', inplace=True)

pass_between = pass_between.merge(average_location, left_on='Passer', right_index = True)
pass_between = pass_between.merge(average_location, left_on='Recipient', right_index = True, suffixes = ['','_end'])

pass_between

rec = pd.to_numeric(pass_between['Recipient'], downcast='integer')
pass_between['Recipient'] = rec

pass_between

MAX_LINE_WIDTH = 18
MAX_MARKER_SIZE = 3000
pass_between['width'] = (pass_between.Pass_Count / pass_between.Pass_Count.max() *
                           MAX_LINE_WIDTH)
average_location['marker_size'] = (average_location['count']
                                         / average_location['count'].max() * MAX_MARKER_SIZE)

MIN_TRANSPARENCY = 0.3
color = np.array(to_rgba('white'))
color = np.tile(color, (len(pass_between), 1))
c_transparency = pass_between.Pass_Count / pass_between.Pass_Count.max()
c_transparency = (c_transparency * (1 - MIN_TRANSPARENCY)) + MIN_TRANSPARENCY
color[:, 3] = c_transparency

# Setup the pitch
pitch = Pitch(pitch_type='statsbomb', pitch_color='#22312b', line_color='#c7d5cc')
fig, ax = pitch.draw(figsize=(14, 9), constrained_layout=True, tight_layout=False)
fig.set_facecolor("#22312b")
pass_lines = pitch.lines(1.3*pass_between.X, .8*pass_between.Y,
                         1.3*pass_between.X_end, .8*pass_between.Y_end, lw=pass_between.width,
                         color=color, zorder=1, ax=ax)
pass_nodes = pitch.scatter(1.3*average_location.X, .8*average_location.Y,
                           s=average_location.marker_size,
                           color='white', edgecolors='black', linewidth=1, alpha=1, ax=ax)
for index, row in average_location.iterrows():
    pitch.annotate(row.name, xy=(1.3*row.X, .8*row.Y), c='black', va='center',
                   ha='center', size=16, weight='bold', ax=ax)

